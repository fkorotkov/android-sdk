# task:
#   name: macOS
#   osx_instance:
#     image: mojave-xcode-10.1
#   env:
#     ANDROID_API: 23
#   brew_update_script: brew update
#   install_java_script: brew cask install homebrew/cask-versions/java8
#   install_android_sdk_script: brew cask install android-sdk
#   accept_licenses_script: yes | sdkmanager --licenses
#   install_android_platforms_script: >
#     sdkmanager \
#       "platform-tools" \
#       "tools" \
#       "emulator" \
#       "platforms;android-$ANDROID_API" \
#       "system-images;android-$ANDROID_API;google_apis;x86_64"
#   create_android_avd_script: >
#     echo no | \
#     avdmanager create avd \
#     --force \
#     --name test \
#     --package "system-images;android-$ANDROID_API;google_apis;x86_64"
#   create_sdcard_script: mksdcard -l mySdCard 1024M mySdCardFile.img
#   start_emulator_background_script: >
#     $ANDROID_HOME/emulator/emulator \
#     -memory 2048 \
#     -avd test \
#     -sdcard mySdCardFile.img \
#     -no-audio \
#     -no-window
#   wait_for_emulator_script:
#     - adb wait-for-device
#     - adb shell input keyevent 82
#   check_script: ./gradlew check connectedCheck

task:
  name: Linux
  container:
    image: cirrusci/android-sdk:28
  env:
    ANDROID_API: 23
    AVD_API: google_apis
    AVD_ABI: armeabi-v7a
    KINVEY_APP_KEY: ENCRYPTED[e24aecec15356529f1987de46e0aa7b83252d18bd0116412b9d6f0f52fa38713e6d297d7944dbce7781f49565ac2038d]
    KINVEY_APP_SECRET: ENCRYPTED[f34cffa7ce548f9f7a8209bd0b5ef686863ebae701002e72615c090426a439644bbaf3caf176c2b941de9ba8409c3b8a]
  environment_script:
    - pwd
    - uname -m
  apt_update_script: sudo apt update
  apt_install_script: sudo apt install -y lib32stdc++6
  sdkmanager_install_script: >
    sdkmanager \
      "platform-tools" \
      "tools" \
      "emulator" \
      "platforms;android-$ANDROID_API" \
      "system-images;android-$ANDROID_API;$AVD_API;$AVD_ABI"
  sdkmanager_update_script: sdkmanager --update
  sdkmanager_list_script: sdkmanager --list
  create_android_avd_script: echo no | avdmanager create avd --force --name test --package "system-images;android-$ANDROID_API;$AVD_API;$AVD_ABI" --device "Nexus 5X" -c 6G
  start_emulator_background_script: cd $(dirname $(which emulator)) && ./emulator -avd test -no-audio -no-window
  df_script: df -h
  wait_for_emulator_script: >
      bootanim=""
      failcounter=0
      timeout_in_sec=360

      until [[ "$bootanim" =~ "stopped" ]]; do
        bootanim=$(adb -e shell getprop init.svc.bootanim 2>&1)
        if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline"
          || "$bootanim" =~ "running" ]]; then
          let "failcounter += 1"
          echo "Waiting for emulator to start"
          if [[ $failcounter -gt timeout_in_sec ]]; then
            echo "Timeout ($timeout_in_sec seconds) reached; failed to start emulator"
            exit 1
          fi
        fi
        sleep 1
      done
  check_script: ./gradlew check connectedCheck
  kinvey_properties_script:
    - sed -i "s/app.key=<YOUR_APP_KEY_HERE>/app.key=$KINVEY_APP_KEY/g" android-lib/src/androidTest/assets/kinvey.properties
    - sed -i "s/app.secret=<YOUR_APP_SECRET_HERE>/app.secret=$KINVEY_APP_SECRET/g" android-lib/src/androidTest/assets/kinvey.properties
  test_data_script: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.package=com.kinvey.androidTest.store.data -PdisablePreDex --stacktrace --no-daemon
  test_file_script: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.package=com.kinvey.androidTest.store.file -PdisablePreDex --stacktrace --no-daemon
  test_user_script: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.package=com.kinvey.androidTest.store.user -PdisablePreDex --stacktrace --no-daemon
